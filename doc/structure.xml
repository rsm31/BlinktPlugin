<?xml version="1.0" encoding="UTF-8" standalone="no"?><Packages><Package depth="../../" display="rpi.blinkt" name="rpi.blinkt"><Type category="Event" name="BlinktHelper"><Description><![CDATA[Helper event for the Blinkt Plugin, to control a Pimoroni Blinkt APA102 LED board from Apama EPL. Requires the Blinkt Plugin to be installed. It is recommended to always use the helper event in your EPL code rather than invoking the plugin directly.

 The Blinkt! is a strip of 8 APA102 RGB LED modules that can be attached to the 40-pin GPIO connector on a Raspberry Pi Model B and controlled using a simple two-wire SPI protocol. The BlinktPlugin software makes the Blinkt! accessible to Apama EPL developers through an EPL plugin and helper object. The goal is to demonstrate how to straightforwardly integrate real hardware with Apama and control it from EPL.

 Colour values for the Blinkt LEDs are RGB (red, green, blue) triplets with a range of zero to 255. Values outside this range are handled by simply using the least significant 8 bits of the integer as the colour value and ignoring the rest.

 Intensity values for the Blinkt LEDs are floating point values with a range of 0.0 to 1.0. Values less than zero will cause the intensity to be left unchanged, although using the setRGB() or setAllRGB() actions is an easier way to do this. Values greater than 1.0 are treated as though they were 1.0, i.e. maximum intensity.

 The plugin keeps an internal colour/intensity state for each LED that is only transferred to the real LEDs when the refresh() action is called. This is the only way to change the state of the physical LEDs. The effects of any number of preceding set*() and reset() calls will become visible only when refresh() is called.]]></Description><Summary><![CDATA[Helper event for the Blinkt Plugin, to control a Pimoroni Blinkt APA102 LED board from Apama EPL. Requires the Blinkt Plugin to be installed. It is recommended to always use the helper event in your EPL code rather than invoking the plugin directly.]]></Summary><See linkName="https://github.com/pimoroni/blinkt" url="https://github.com/pimoroni/blinkt"><Description><![CDATA[Blinkt! project on GitHub]]></Description></See><See linkName="https://cdn-shop.adafruit.com/product-files/2343/APA102C.pdf" url="https://cdn-shop.adafruit.com/product-files/2343/APA102C.pdf"><Description><![CDATA[APA102 datasheet]]></Description></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Import library="BlinktPlugin" name="blinkt"/><Action name="enableResetOnUnload" staticNature=""><Description><![CDATA[Enable or disable reset of the Blinkt LEDs when the plugin is unloaded. If enabled, when the last plugin instance is unloaded it will attempt to reset and refresh the state of the Blinkt LEDs.]]></Description><Summary><![CDATA[Enable or disable reset of the Blinkt LEDs when the plugin is unloaded. If enabled, when the last plugin instance is unloaded it will attempt to reset and refresh the state of the Blinkt LEDs.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[The previous value of the reset-on-unload flag.]]></Description></Returns><Parameters><Parameter name="enable" type="boolean"><Description><![CDATA[True to enable reset on unload, false to disable it.]]></Description></Parameter></Parameters></Action><Action name="setRGBI" staticNature=""><Description><![CDATA[Set the colour and intensity of a Blinkt LED. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Description><Summary><![CDATA[Set the colour and intensity of a Blinkt LED. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="led" type="integer"><Description><![CDATA[The LED number to set, starting from zero.]]></Description></Parameter><Parameter name="red" type="integer"><Description><![CDATA[The red component of the RGB colour value.]]></Description></Parameter><Parameter name="green" type="integer"><Description><![CDATA[The green component of the RGB colour value.]]></Description></Parameter><Parameter name="blue" type="integer"><Description><![CDATA[The blue component of the RGB colour value.]]></Description></Parameter><Parameter name="intensity" type="float"><Description><![CDATA[The global intensity of the LED.]]></Description></Parameter></Parameters></Action><Action name="setI" staticNature=""><Description><![CDATA[Set the intensity of a Blinkt LED, leaving the colour unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Description><Summary><![CDATA[Set the intensity of a Blinkt LED, leaving the colour unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="led" type="integer"><Description><![CDATA[The LED number to set, starting from zero.]]></Description></Parameter><Parameter name="intensity" type="float"><Description><![CDATA[The global intensity of the LED.]]></Description></Parameter></Parameters></Action><Action name="enableDebug" staticNature=""><Description><![CDATA[Enable or disable debugging output from the plugin. When enabled, debug output is sent to stdout.]]></Description><Summary><![CDATA[Enable or disable debugging output from the plugin. When enabled, debug output is sent to stdout.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"><Description><![CDATA[The previous value of the debug flag.]]></Description></Returns><Parameters><Parameter name="enable" type="boolean"><Description><![CDATA[True to enable debug output, false to disable it.]]></Description></Parameter></Parameters></Action><Action name="delay" staticNature=""><Description><![CDATA[Sleep (busy wait) for a specified time.]]></Description><Summary><![CDATA[Sleep (busy wait) for a specified time.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="millis" type="integer"><Description><![CDATA[The number of milliseconds to sleep for.]]></Description></Parameter></Parameters></Action><Action name="setAllRGBI" staticNature=""><Description><![CDATA[Set the colour and intensity of all Blinkt LEDs. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Description><Summary><![CDATA[Set the colour and intensity of all Blinkt LEDs. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="red" type="integer"><Description><![CDATA[The red component of the RGB colour value.]]></Description></Parameter><Parameter name="green" type="integer"><Description><![CDATA[The green component of the RGB colour value.]]></Description></Parameter><Parameter name="blue" type="integer"><Description><![CDATA[The blue component of the RGB colour value.]]></Description></Parameter><Parameter name="intensity" type="float"><Description><![CDATA[The global intensity of the LEDs.]]></Description></Parameter></Parameters></Action><Action name="setAllRGB" staticNature=""><Description><![CDATA[Set the colour of all Blinkt LEDs, leaving the intensity unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Description><Summary><![CDATA[Set the colour of all Blinkt LEDs, leaving the intensity unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="red" type="integer"><Description><![CDATA[The red component of the RGB colour value.]]></Description></Parameter><Parameter name="green" type="integer"><Description><![CDATA[The green component of the RGB colour value.]]></Description></Parameter><Parameter name="blue" type="integer"><Description><![CDATA[The blue component of the RGB colour value.]]></Description></Parameter></Parameters></Action><Action name="setRGB" staticNature=""><Description><![CDATA[Set the colour of a Blinkt LED, leaving the intensity unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Description><Summary><![CDATA[Set the colour of a Blinkt LED, leaving the intensity unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="led" type="integer"><Description><![CDATA[The LED number to set, starting from zero.]]></Description></Parameter><Parameter name="red" type="integer"><Description><![CDATA[The red component of the RGB colour value.]]></Description></Parameter><Parameter name="green" type="integer"><Description><![CDATA[The green component of the RGB colour value.]]></Description></Parameter><Parameter name="blue" type="integer"><Description><![CDATA[The blue component of the RGB colour value.]]></Description></Parameter></Parameters></Action><Action name="refresh" staticNature=""><Description><![CDATA[Update all the Blinkt LEDs to match the internal colour and intensity state of the plugin, making the effects of all previous set*() calls visible.]]></Description><Summary><![CDATA[Update all the Blinkt LEDs to match the internal colour and intensity state of the plugin, making the effects of all previous set*() calls visible.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="reset" staticNature=""><Description><![CDATA[Set all Blinkt LEDs to no colour (red, green and blue all zero) and zero intensity. The refresh() action must be call to make the effects of a reset visible.]]></Description><Summary><![CDATA[Set all Blinkt LEDs to no colour (red, green and blue all zero) and zero intensity. The refresh() action must be call to make the effects of a reset visible.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action><Action name="setAllI" staticNature=""><Description><![CDATA[Set the intensity of all Blinkt LEDs, leaving the colour unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Description><Summary><![CDATA[Set the intensity of all Blinkt LEDs, leaving the colour unchanged. This action just changes internal plugin state. Use the refresh() action to actually update the Blinkt LEDs.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Parameters><Parameter name="intensity" type="float"><Description><![CDATA[The global intensity of the LEDs.]]></Description></Parameter></Parameters></Action></Type><Type category="Monitor" name="BlinktSetup"><Description><![CDATA[Monitor that exists only so that its onload() action can configure the Raspberry Pi GPIO pins for the Blinkt LED board.

 Do not inject this monitor into the correlator more than once, as it will probably cause the correlator to shut down immediately when attempting to initialise the wiringPi library a second time.

 Requires the <a href="http://www.apamacommunity.com/gpio-plugin-for-apama-core-community-edition-on-a-raspberry-pi/">GPIO plugin</a> to be installed.]]></Description><Summary><![CDATA[Monitor that exists only so that its onload() action can configure the Raspberry Pi GPIO pins for the Blinkt LED board.]]></Summary><Routes/><Emits/><Enqueues/><Sends/><Listens/></Type></Package></Packages>